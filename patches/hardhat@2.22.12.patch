diff --git a/internal/hardhat-network/provider/provider.d.ts b/internal/hardhat-network/provider/provider.d.ts
index 970671b4888c4739ce919cfb48c724b0c503b49f..3cfbfd4f2860f1399ad78169f1485352e8177b9f 100644
--- a/internal/hardhat-network/provider/provider.d.ts
+++ b/internal/hardhat-network/provider/provider.d.ts
@@ -1,6 +1,6 @@
 /// <reference types="node" />
 import type { Artifacts, EIP1193Provider, HardhatNetworkChainsConfig, RequestArguments } from "../../../types";
-import type { EdrContext, VMTracer as VMTracerT } from "@nomicfoundation/edr";
+import type { EdrContext, VMTracer as VMTracerT } from "@ignored/edr";
 import { EventEmitter } from "events";
 import { ForkConfig, GenesisAccount, IntervalMiningConfig, MempoolOrder, NodeConfig, TracingConfig } from "./node-types";
 import { LoggerConfig } from "./modules/logger";
diff --git a/internal/hardhat-network/provider/provider.js b/internal/hardhat-network/provider/provider.js
index f41e157111016d3cd08220b0bd474ecbed624890..d0a4af4d759346247bacc29af1e914aaec79a3d6 100644
--- a/internal/hardhat-network/provider/provider.js
+++ b/internal/hardhat-network/provider/provider.js
@@ -58,7 +58,7 @@ exports.DEFAULT_COINBASE = "0xc014ba5ec014ba5ec014ba5ec014ba5ec014ba5e";
 let _globalEdrContext;
 // Lazy initialize the global EDR context.
 function getGlobalEdrContext() {
-    const { EdrContext } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+    const { EdrContext } = (0, napi_rs_1.requireNapiRsModule)("@ignored/edr");
     if (_globalEdrContext === undefined) {
         // Only one is allowed to exist
         _globalEdrContext = new EdrContext();
@@ -108,7 +108,7 @@ class EdrProviderWrapper extends events_1.EventEmitter {
         }
     }
     static async create(config, loggerConfig, tracingConfig) {
-        const { Provider } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+        const { Provider } = (0, napi_rs_1.requireNapiRsModule)("@ignored/edr");
         const coinbase = config.coinbase ?? exports.DEFAULT_COINBASE;
         let fork;
         if (config.forkConfig !== undefined) {
@@ -292,7 +292,7 @@ class EdrProviderWrapper extends events_1.EventEmitter {
             this.emit(constants_1.HARDHAT_NETWORK_REVERT_SNAPSHOT_EVENT);
         }
         // Override EDR version string with Hardhat version string with EDR backend,
-        // e.g. `HardhatNetwork/2.19.0/@nomicfoundation/edr/0.2.0-dev`
+        // e.g. `HardhatNetwork/2.19.0/@ignored/edr/0.2.0-dev`
         if (args.method === "web3_clientVersion") {
             return clientVersion(response.result);
         }
@@ -395,7 +395,7 @@ exports.EdrProviderWrapper = EdrProviderWrapper;
 async function clientVersion(edrClientVersion) {
     const hardhatPackage = await (0, packageInfo_1.getPackageJson)();
     const edrVersion = edrClientVersion.split("/")[1];
-    return `HardhatNetwork/${hardhatPackage.version}/@nomicfoundation/edr/${edrVersion}`;
+    return `HardhatNetwork/${hardhatPackage.version}/@ignored/edr/${edrVersion}`;
 }
 async function createHardhatNetworkProvider(hardhatNetworkProviderConfig, loggerConfig, artifacts) {
     log("Making tracing config");
diff --git a/internal/hardhat-network/provider/return-data.d.ts b/internal/hardhat-network/provider/return-data.d.ts
index c5ef34caa2d60c2207a52fd80b0d9deb6a84fbe6..2826c351d285e9b33a23bb7b5ac37bebaa6f1994 100644
--- a/internal/hardhat-network/provider/return-data.d.ts
+++ b/internal/hardhat-network/provider/return-data.d.ts
@@ -1,3 +1,3 @@
-declare const ReturnData: typeof import("@nomicfoundation/edr").ReturnData;
+declare const ReturnData: typeof import("@ignored/edr").ReturnData;
 export { ReturnData };
 //# sourceMappingURL=return-data.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/provider/return-data.js b/internal/hardhat-network/provider/return-data.js
index e77f1b35ec62399d921aa2e3470326471c7c162b..f50a9d64edee2822770686cad9ffc8eb7aa9aa10 100644
--- a/internal/hardhat-network/provider/return-data.js
+++ b/internal/hardhat-network/provider/return-data.js
@@ -2,6 +2,6 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.ReturnData = void 0;
 const napi_rs_1 = require("../../../common/napi-rs");
-const { ReturnData } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+const { ReturnData } = (0, napi_rs_1.requireNapiRsModule)("@ignored/edr");
 exports.ReturnData = ReturnData;
 //# sourceMappingURL=return-data.js.map
\ No newline at end of file
diff --git a/internal/hardhat-network/provider/utils/convertToEdr.d.ts b/internal/hardhat-network/provider/utils/convertToEdr.d.ts
index 3f88a622b92abfd911f4b79f5160758ee81a0f2a..8d0f14b21ef9f2d3f53ea77df1a13828b62bc2f7 100644
--- a/internal/hardhat-network/provider/utils/convertToEdr.d.ts
+++ b/internal/hardhat-network/provider/utils/convertToEdr.d.ts
@@ -1,4 +1,4 @@
-import type { SpecId, MineOrdering, IntervalRange, DebugTraceResult, TracingMessage, TracingMessageResult, TracingStep } from "@nomicfoundation/edr";
+import type { SpecId, MineOrdering, IntervalRange, DebugTraceResult, TracingMessage, TracingMessageResult, TracingStep } from "@ignored/edr";
 import { HardforkName } from "../../../util/hardforks";
 import { IntervalMiningConfig, MempoolOrder } from "../node-types";
 import { RpcDebugTraceOutput } from "../output";
diff --git a/internal/hardhat-network/provider/utils/convertToEdr.js b/internal/hardhat-network/provider/utils/convertToEdr.js
index f1532cd82ff40a92721e6b0c0437fdb7c4f1323c..b05b239f9d27fab43abdf4dbb508602cc8ca8aa0 100644
--- a/internal/hardhat-network/provider/utils/convertToEdr.js
+++ b/internal/hardhat-network/provider/utils/convertToEdr.js
@@ -6,7 +6,7 @@ const napi_rs_1 = require("../../../../common/napi-rs");
 const hardforks_1 = require("../../../util/hardforks");
 /* eslint-disable @nomicfoundation/hardhat-internal-rules/only-hardhat-error */
 function ethereumsjsHardforkToEdrSpecId(hardfork) {
-    const { SpecId } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+    const { SpecId } = (0, napi_rs_1.requireNapiRsModule)("@ignored/edr");
     switch (hardfork) {
         case hardforks_1.HardforkName.FRONTIER:
             return 0 /* SpecId.Frontier */;
@@ -49,7 +49,7 @@ function ethereumsjsHardforkToEdrSpecId(hardfork) {
 }
 exports.ethereumsjsHardforkToEdrSpecId = ethereumsjsHardforkToEdrSpecId;
 function edrSpecIdToEthereumHardfork(specId) {
-    const { SpecId } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+    const { SpecId } = (0, napi_rs_1.requireNapiRsModule)("@ignored/edr");
     switch (specId) {
         case 0 /* SpecId.Frontier */:
             return hardforks_1.HardforkName.FRONTIER;
@@ -110,7 +110,7 @@ function ethereumjsIntervalMiningConfigToEdr(config) {
 }
 exports.ethereumjsIntervalMiningConfigToEdr = ethereumjsIntervalMiningConfigToEdr;
 function ethereumjsMempoolOrderToEdrMineOrdering(mempoolOrder) {
-    const { MineOrdering } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+    const { MineOrdering } = (0, napi_rs_1.requireNapiRsModule)("@ignored/edr");
     switch (mempoolOrder) {
         case "fifo":
             return "Fifo" /* MineOrdering.Fifo */;
diff --git a/internal/hardhat-network/provider/vm/exit.d.ts b/internal/hardhat-network/provider/vm/exit.d.ts
index 736cf00d40e1a118cddd83638fe6c2adb6e33c84..2ddc7cfc013001b4a619208fa2200cbae96a939b 100644
--- a/internal/hardhat-network/provider/vm/exit.d.ts
+++ b/internal/hardhat-network/provider/vm/exit.d.ts
@@ -1,3 +1,3 @@
-declare const ExitCode: typeof import("@nomicfoundation/edr").ExitCode;
+declare const ExitCode: typeof import("@ignored/edr").ExitCode;
 export { ExitCode };
 //# sourceMappingURL=exit.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/provider/vm/exit.js b/internal/hardhat-network/provider/vm/exit.js
index 8d8f63bd90f4ab40727da6199386642929fbab01..3fac70a5f423b583ada61bb3400a51471a1cb8f2 100644
--- a/internal/hardhat-network/provider/vm/exit.js
+++ b/internal/hardhat-network/provider/vm/exit.js
@@ -2,6 +2,6 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.ExitCode = void 0;
 const napi_rs_1 = require("../../../../common/napi-rs");
-const { ExitCode } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+const { ExitCode } = (0, napi_rs_1.requireNapiRsModule)("@ignored/edr");
 exports.ExitCode = ExitCode;
 //# sourceMappingURL=exit.js.map
\ No newline at end of file
diff --git a/internal/hardhat-network/provider/vm/minimal-vm.d.ts b/internal/hardhat-network/provider/vm/minimal-vm.d.ts
index 1566327cdef69e9666ed43777de8d406a1f5981c..794317ecf9e65a4c5c5ee63b509a23afb88d147a 100644
--- a/internal/hardhat-network/provider/vm/minimal-vm.d.ts
+++ b/internal/hardhat-network/provider/vm/minimal-vm.d.ts
@@ -1,5 +1,5 @@
 /// <reference types="node" />
-import type { Provider as EdrProviderT } from "@nomicfoundation/edr";
+import type { Provider as EdrProviderT } from "@ignored/edr";
 import type { Address } from "@nomicfoundation/ethereumjs-util";
 import type { MinimalEVMResult, MinimalInterpreterStep, MinimalMessage } from "./types";
 import { AsyncEventEmitter } from "@nomicfoundation/ethereumjs-util";
diff --git a/internal/hardhat-network/provider/vm/types.d.ts b/internal/hardhat-network/provider/vm/types.d.ts
index 1cd1bd79e9f701fe859a11683fff262a8587ac97..b7acc6006138715b8f1078bd256f416c7f22b03c 100644
--- a/internal/hardhat-network/provider/vm/types.d.ts
+++ b/internal/hardhat-network/provider/vm/types.d.ts
@@ -1,5 +1,5 @@
 /// <reference types="node" />
-import type { ExceptionalHalt, SuccessReason } from "@nomicfoundation/edr";
+import type { ExceptionalHalt, SuccessReason } from "@ignored/edr";
 import type { Address } from "@nomicfoundation/ethereumjs-util";
 /**
  * These types are minimal versions of the values returned by ethereumjs
diff --git a/internal/hardhat-network/stack-traces/compiler-to-model.d.ts b/internal/hardhat-network/stack-traces/compiler-to-model.d.ts
index e709f3feba9f3af3ce665f2ef24df35697a6c67d..4e85e750acfd1165b93aac9f54366fd32407c512 100644
--- a/internal/hardhat-network/stack-traces/compiler-to-model.d.ts
+++ b/internal/hardhat-network/stack-traces/compiler-to-model.d.ts
@@ -1,3 +1,3 @@
-declare const createModelsAndDecodeBytecodes: typeof import("@nomicfoundation/edr").createModelsAndDecodeBytecodes;
+declare const createModelsAndDecodeBytecodes: typeof import("@ignored/edr").createModelsAndDecodeBytecodes;
 export { createModelsAndDecodeBytecodes };
 //# sourceMappingURL=compiler-to-model.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/compiler-to-model.js b/internal/hardhat-network/stack-traces/compiler-to-model.js
index 505a6aed9615ff94f3e31bebdb29a8f1c1a7f0f6..5f849ee6ad3015da44f2fa8939c8c4102ee873ff 100644
--- a/internal/hardhat-network/stack-traces/compiler-to-model.js
+++ b/internal/hardhat-network/stack-traces/compiler-to-model.js
@@ -2,6 +2,6 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.createModelsAndDecodeBytecodes = void 0;
 const napi_rs_1 = require("../../../common/napi-rs");
-const { createModelsAndDecodeBytecodes } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+const { createModelsAndDecodeBytecodes } = (0, napi_rs_1.requireNapiRsModule)("@ignored/edr");
 exports.createModelsAndDecodeBytecodes = createModelsAndDecodeBytecodes;
 //# sourceMappingURL=compiler-to-model.js.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/debug.d.ts b/internal/hardhat-network/stack-traces/debug.d.ts
index 250c7240aa6846a3423ca4e4a036ac9b5fed9606..312281a5da7fb6217e56e12cabb0f70dc100ea27 100644
--- a/internal/hardhat-network/stack-traces/debug.d.ts
+++ b/internal/hardhat-network/stack-traces/debug.d.ts
@@ -1,3 +1,3 @@
-declare const printMessageTrace: typeof import("@nomicfoundation/edr").printMessageTrace, printStackTrace: typeof import("@nomicfoundation/edr").printStackTrace;
+declare const printMessageTrace: typeof import("@ignored/edr").printMessageTrace, printStackTrace: typeof import("@ignored/edr").printStackTrace;
 export { printMessageTrace, printStackTrace };
 //# sourceMappingURL=debug.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/debug.js b/internal/hardhat-network/stack-traces/debug.js
index 174709d5296f4e26e80517eb05c241479f3a3e96..16d684a89309ab52f46aadc0bcf534a7c7e28b26 100644
--- a/internal/hardhat-network/stack-traces/debug.js
+++ b/internal/hardhat-network/stack-traces/debug.js
@@ -2,7 +2,7 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.printStackTrace = exports.printMessageTrace = void 0;
 const napi_rs_1 = require("../../../common/napi-rs");
-const { printMessageTrace, printStackTrace } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+const { printMessageTrace, printStackTrace } = (0, napi_rs_1.requireNapiRsModule)("@ignored/edr");
 exports.printMessageTrace = printMessageTrace;
 exports.printStackTrace = printStackTrace;
 //# sourceMappingURL=debug.js.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/library-utils.d.ts b/internal/hardhat-network/stack-traces/library-utils.d.ts
index 4d39bbdfa5b419267dd45842683bab71864348c7..1e66ebeb1162ee1dea09b9404592021ecacd0b57 100644
--- a/internal/hardhat-network/stack-traces/library-utils.d.ts
+++ b/internal/hardhat-network/stack-traces/library-utils.d.ts
@@ -1,3 +1,3 @@
-declare const linkHexStringBytecode: typeof import("@nomicfoundation/edr").linkHexStringBytecode;
+declare const linkHexStringBytecode: typeof import("@ignored/edr").linkHexStringBytecode;
 export { linkHexStringBytecode };
 //# sourceMappingURL=library-utils.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/library-utils.js b/internal/hardhat-network/stack-traces/library-utils.js
index 33595a11196f8372f4429252716a150993112ea5..3adfb5fa3915cc08082a148b974e94dd0a3d4dee 100644
--- a/internal/hardhat-network/stack-traces/library-utils.js
+++ b/internal/hardhat-network/stack-traces/library-utils.js
@@ -2,6 +2,6 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.linkHexStringBytecode = void 0;
 const napi_rs_1 = require("../../../common/napi-rs");
-const { linkHexStringBytecode } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+const { linkHexStringBytecode } = (0, napi_rs_1.requireNapiRsModule)("@ignored/edr");
 exports.linkHexStringBytecode = linkHexStringBytecode;
 //# sourceMappingURL=library-utils.js.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/message-trace.d.ts b/internal/hardhat-network/stack-traces/message-trace.d.ts
index eeaca6aba704d629b74cf4038c0c465ef3238273..0b647d318f4b3dfaafab29b788984c352059871e 100644
--- a/internal/hardhat-network/stack-traces/message-trace.d.ts
+++ b/internal/hardhat-network/stack-traces/message-trace.d.ts
@@ -1,4 +1,4 @@
-import type { PrecompileMessageTrace, CreateMessageTrace, CallMessageTrace } from "@nomicfoundation/edr";
+import type { PrecompileMessageTrace, CreateMessageTrace, CallMessageTrace } from "@ignored/edr";
 export type { PrecompileMessageTrace, CreateMessageTrace, CallMessageTrace };
 export type MessageTrace = CreateMessageTrace | CallMessageTrace | PrecompileMessageTrace;
 //# sourceMappingURL=message-trace.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/solidity-stack-trace.d.ts b/internal/hardhat-network/stack-traces/solidity-stack-trace.d.ts
index 968fbaef15ca19a6b45ba0cbeb37fb583493d3e5..c893328e6586adad5f7fec458b991477d512929a 100644
--- a/internal/hardhat-network/stack-traces/solidity-stack-trace.d.ts
+++ b/internal/hardhat-network/stack-traces/solidity-stack-trace.d.ts
@@ -1,5 +1,5 @@
-import type { SourceReference, CallstackEntryStackTraceEntry, UnrecognizedCreateCallstackEntryStackTraceEntry, UnrecognizedContractCallstackEntryStackTraceEntry, PrecompileErrorStackTraceEntry, RevertErrorStackTraceEntry, PanicErrorStackTraceEntry, CustomErrorStackTraceEntry, FunctionNotPayableErrorStackTraceEntry, InvalidParamsErrorStackTraceEntry, FallbackNotPayableErrorStackTraceEntry, FallbackNotPayableAndNoReceiveErrorStackTraceEntry, UnrecognizedFunctionWithoutFallbackErrorStackTraceEntry, MissingFallbackOrReceiveErrorStackTraceEntry, ReturndataSizeErrorStackTraceEntry, NonContractAccountCalledErrorStackTraceEntry, CallFailedErrorStackTraceEntry, DirectLibraryCallErrorStackTraceEntry, UnrecognizedCreateErrorStackTraceEntry, UnrecognizedContractErrorStackTraceEntry, OtherExecutionErrorStackTraceEntry, UnmappedSolc063RevertErrorStackTraceEntry, ContractTooLargeErrorStackTraceEntry, InternalFunctionCallStackEntry, ContractCallRunOutOfGasError } from "@nomicfoundation/edr";
-declare const StackTraceEntryType: typeof import("@nomicfoundation/edr").StackTraceEntryType, stackTraceEntryTypeToString: typeof import("@nomicfoundation/edr").stackTraceEntryTypeToString, FALLBACK_FUNCTION_NAME: string, RECEIVE_FUNCTION_NAME: string, CONSTRUCTOR_FUNCTION_NAME: string, UNRECOGNIZED_FUNCTION_NAME: string, UNKNOWN_FUNCTION_NAME: string, PRECOMPILE_FUNCTION_NAME: string, UNRECOGNIZED_CONTRACT_NAME: string;
+import type { SourceReference, CallstackEntryStackTraceEntry, UnrecognizedCreateCallstackEntryStackTraceEntry, UnrecognizedContractCallstackEntryStackTraceEntry, PrecompileErrorStackTraceEntry, RevertErrorStackTraceEntry, PanicErrorStackTraceEntry, CustomErrorStackTraceEntry, FunctionNotPayableErrorStackTraceEntry, InvalidParamsErrorStackTraceEntry, FallbackNotPayableErrorStackTraceEntry, FallbackNotPayableAndNoReceiveErrorStackTraceEntry, UnrecognizedFunctionWithoutFallbackErrorStackTraceEntry, MissingFallbackOrReceiveErrorStackTraceEntry, ReturndataSizeErrorStackTraceEntry, NonContractAccountCalledErrorStackTraceEntry, CallFailedErrorStackTraceEntry, DirectLibraryCallErrorStackTraceEntry, UnrecognizedCreateErrorStackTraceEntry, UnrecognizedContractErrorStackTraceEntry, OtherExecutionErrorStackTraceEntry, UnmappedSolc063RevertErrorStackTraceEntry, ContractTooLargeErrorStackTraceEntry, InternalFunctionCallStackEntry, ContractCallRunOutOfGasError } from "@ignored/edr";
+declare const StackTraceEntryType: typeof import("@ignored/edr").StackTraceEntryType, stackTraceEntryTypeToString: typeof import("@ignored/edr").stackTraceEntryTypeToString, FALLBACK_FUNCTION_NAME: string, RECEIVE_FUNCTION_NAME: string, CONSTRUCTOR_FUNCTION_NAME: string, UNRECOGNIZED_FUNCTION_NAME: string, UNKNOWN_FUNCTION_NAME: string, PRECOMPILE_FUNCTION_NAME: string, UNRECOGNIZED_CONTRACT_NAME: string;
 export { SourceReference, StackTraceEntryType, stackTraceEntryTypeToString, FALLBACK_FUNCTION_NAME, RECEIVE_FUNCTION_NAME, CONSTRUCTOR_FUNCTION_NAME, UNRECOGNIZED_FUNCTION_NAME, UNKNOWN_FUNCTION_NAME, PRECOMPILE_FUNCTION_NAME, UNRECOGNIZED_CONTRACT_NAME, };
 export type { CallstackEntryStackTraceEntry, UnrecognizedCreateCallstackEntryStackTraceEntry, UnrecognizedContractCallstackEntryStackTraceEntry, PrecompileErrorStackTraceEntry, RevertErrorStackTraceEntry, PanicErrorStackTraceEntry, CustomErrorStackTraceEntry, FunctionNotPayableErrorStackTraceEntry, InvalidParamsErrorStackTraceEntry, FallbackNotPayableErrorStackTraceEntry, FallbackNotPayableAndNoReceiveErrorStackTraceEntry, UnrecognizedFunctionWithoutFallbackErrorStackTraceEntry, MissingFallbackOrReceiveErrorStackTraceEntry, ReturndataSizeErrorStackTraceEntry, NonContractAccountCalledErrorStackTraceEntry, CallFailedErrorStackTraceEntry, DirectLibraryCallErrorStackTraceEntry, UnrecognizedCreateErrorStackTraceEntry, UnrecognizedContractErrorStackTraceEntry, OtherExecutionErrorStackTraceEntry, UnmappedSolc063RevertErrorStackTraceEntry, ContractTooLargeErrorStackTraceEntry, InternalFunctionCallStackEntry, ContractCallRunOutOfGasError, };
 export type SolidityStackTraceEntry = CallstackEntryStackTraceEntry | UnrecognizedCreateCallstackEntryStackTraceEntry | UnrecognizedContractCallstackEntryStackTraceEntry | PrecompileErrorStackTraceEntry | RevertErrorStackTraceEntry | PanicErrorStackTraceEntry | CustomErrorStackTraceEntry | FunctionNotPayableErrorStackTraceEntry | InvalidParamsErrorStackTraceEntry | FallbackNotPayableErrorStackTraceEntry | FallbackNotPayableAndNoReceiveErrorStackTraceEntry | UnrecognizedFunctionWithoutFallbackErrorStackTraceEntry | MissingFallbackOrReceiveErrorStackTraceEntry | ReturndataSizeErrorStackTraceEntry | NonContractAccountCalledErrorStackTraceEntry | CallFailedErrorStackTraceEntry | DirectLibraryCallErrorStackTraceEntry | UnrecognizedCreateErrorStackTraceEntry | UnrecognizedContractErrorStackTraceEntry | OtherExecutionErrorStackTraceEntry | UnmappedSolc063RevertErrorStackTraceEntry | ContractTooLargeErrorStackTraceEntry | InternalFunctionCallStackEntry | ContractCallRunOutOfGasError;
diff --git a/internal/hardhat-network/stack-traces/solidity-stack-trace.js b/internal/hardhat-network/stack-traces/solidity-stack-trace.js
index e5d88bf76b28d881026036dde974cd8a619b6ad0..3cd65eeb18c6af06511f0a37d196cde308b4f41f 100644
--- a/internal/hardhat-network/stack-traces/solidity-stack-trace.js
+++ b/internal/hardhat-network/stack-traces/solidity-stack-trace.js
@@ -2,7 +2,7 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.UNRECOGNIZED_CONTRACT_NAME = exports.PRECOMPILE_FUNCTION_NAME = exports.UNKNOWN_FUNCTION_NAME = exports.UNRECOGNIZED_FUNCTION_NAME = exports.CONSTRUCTOR_FUNCTION_NAME = exports.RECEIVE_FUNCTION_NAME = exports.FALLBACK_FUNCTION_NAME = exports.stackTraceEntryTypeToString = exports.StackTraceEntryType = void 0;
 const napi_rs_1 = require("../../../common/napi-rs");
-const { StackTraceEntryType, stackTraceEntryTypeToString, FALLBACK_FUNCTION_NAME, RECEIVE_FUNCTION_NAME, CONSTRUCTOR_FUNCTION_NAME, UNRECOGNIZED_FUNCTION_NAME, UNKNOWN_FUNCTION_NAME, PRECOMPILE_FUNCTION_NAME, UNRECOGNIZED_CONTRACT_NAME, } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+const { StackTraceEntryType, stackTraceEntryTypeToString, FALLBACK_FUNCTION_NAME, RECEIVE_FUNCTION_NAME, CONSTRUCTOR_FUNCTION_NAME, UNRECOGNIZED_FUNCTION_NAME, UNKNOWN_FUNCTION_NAME, PRECOMPILE_FUNCTION_NAME, UNRECOGNIZED_CONTRACT_NAME, } = (0, napi_rs_1.requireNapiRsModule)("@ignored/edr");
 exports.StackTraceEntryType = StackTraceEntryType;
 exports.stackTraceEntryTypeToString = stackTraceEntryTypeToString;
 exports.FALLBACK_FUNCTION_NAME = FALLBACK_FUNCTION_NAME;
diff --git a/internal/hardhat-network/stack-traces/solidityTracer.d.ts b/internal/hardhat-network/stack-traces/solidityTracer.d.ts
index b09e6e34c21b0213323149dc7476234406377cb7..21e9c2986e388aabf64068a8af15ebba90c4b5a6 100644
--- a/internal/hardhat-network/stack-traces/solidityTracer.d.ts
+++ b/internal/hardhat-network/stack-traces/solidityTracer.d.ts
@@ -1,3 +1,3 @@
-declare const SolidityTracer: typeof import("@nomicfoundation/edr").SolidityTracer;
+declare const SolidityTracer: typeof import("@ignored/edr").SolidityTracer;
 export { SolidityTracer };
 //# sourceMappingURL=solidityTracer.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/solidityTracer.js b/internal/hardhat-network/stack-traces/solidityTracer.js
index 4540fea8431eb15155db13adb568053db39f2eab..74941358998d572043d8c734fd6d5ef02cc24498 100644
--- a/internal/hardhat-network/stack-traces/solidityTracer.js
+++ b/internal/hardhat-network/stack-traces/solidityTracer.js
@@ -2,6 +2,6 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.SolidityTracer = void 0;
 const napi_rs_1 = require("../../../common/napi-rs");
-const { SolidityTracer } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+const { SolidityTracer } = (0, napi_rs_1.requireNapiRsModule)("@ignored/edr");
 exports.SolidityTracer = SolidityTracer;
 //# sourceMappingURL=solidityTracer.js.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/vm-trace-decoder.d.ts b/internal/hardhat-network/stack-traces/vm-trace-decoder.d.ts
index 4c31c3673060282fca8e4ac2fe0b8342e99390a9..739a907dc10b09856b00d1deba79bf7953ed640e 100644
--- a/internal/hardhat-network/stack-traces/vm-trace-decoder.d.ts
+++ b/internal/hardhat-network/stack-traces/vm-trace-decoder.d.ts
@@ -1,4 +1,4 @@
-import type { VmTraceDecoder as VmTraceDecoderT } from "@nomicfoundation/edr";
+import type { VmTraceDecoder as VmTraceDecoderT } from "@ignored/edr";
 import { TracingConfig } from "../provider/node-types";
 declare const VmTraceDecoder: typeof VmTraceDecoderT;
 declare function initializeVmTraceDecoderWrapper(vmTraceDecoder: VmTraceDecoderT, tracingConfig: TracingConfig): void;
diff --git a/internal/hardhat-network/stack-traces/vm-trace-decoder.js b/internal/hardhat-network/stack-traces/vm-trace-decoder.js
index 75b3d329189c21bebf7bc06b515aa8c140144c59..d5e331099334141421d6c61e57c913cc2bed6cb8 100644
--- a/internal/hardhat-network/stack-traces/vm-trace-decoder.js
+++ b/internal/hardhat-network/stack-traces/vm-trace-decoder.js
@@ -9,7 +9,7 @@ const debug_1 = __importDefault(require("debug"));
 const reporter_1 = require("../../sentry/reporter");
 const napi_rs_1 = require("../../../common/napi-rs");
 const log = (0, debug_1.default)("hardhat:core:hardhat-network:node");
-const { VmTraceDecoder, initializeVmTraceDecoder } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+const { VmTraceDecoder, initializeVmTraceDecoder } = (0, napi_rs_1.requireNapiRsModule)("@ignored/edr");
 exports.VmTraceDecoder = VmTraceDecoder;
 function initializeVmTraceDecoderWrapper(vmTraceDecoder, tracingConfig) {
     try {
diff --git a/internal/hardhat-network/stack-traces/vm-tracer.d.ts b/internal/hardhat-network/stack-traces/vm-tracer.d.ts
index 272e3688b9917a813a2f341caf44c406f18474a7..ef2fa06e8f0526d9a64e5ff5b57e46129cb07bf4 100644
--- a/internal/hardhat-network/stack-traces/vm-tracer.d.ts
+++ b/internal/hardhat-network/stack-traces/vm-tracer.d.ts
@@ -1,3 +1,3 @@
-declare const VmTracer: typeof import("@nomicfoundation/edr").VmTracer;
+declare const VmTracer: typeof import("@ignored/edr").VmTracer;
 export { VmTracer as VMTracer };
 //# sourceMappingURL=vm-tracer.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/vm-tracer.js b/internal/hardhat-network/stack-traces/vm-tracer.js
index 9d7f33c621e426bdb5d3c71d2ac1cc3122924688..a5657fec90ca228b48b0deb8e3e3759513c6f14c 100644
--- a/internal/hardhat-network/stack-traces/vm-tracer.js
+++ b/internal/hardhat-network/stack-traces/vm-tracer.js
@@ -2,6 +2,6 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.VMTracer = void 0;
 const napi_rs_1 = require("../../../common/napi-rs");
-const { VmTracer } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+const { VmTracer } = (0, napi_rs_1.requireNapiRsModule)("@ignored/edr");
 exports.VMTracer = VmTracer;
 //# sourceMappingURL=vm-tracer.js.map
\ No newline at end of file
diff --git a/package.json b/package.json
index 07313f03b80aa8a6d5ba084ac145cd2cc528a02c..c70192e90d01c95969b6e490c146ee1ee7c845f1 100644
--- a/package.json
+++ b/package.json
@@ -85,7 +85,7 @@
   "dependencies": {
     "@ethersproject/abi": "^5.1.2",
     "@metamask/eth-sig-util": "^4.0.0",
-    "@nomicfoundation/edr": "^0.6.1",
+    "@ignored/edr": "^0.6.1",
     "@nomicfoundation/ethereumjs-common": "4.0.4",
     "@nomicfoundation/ethereumjs-tx": "5.0.4",
     "@nomicfoundation/ethereumjs-util": "9.0.4",
diff --git a/src/internal/hardhat-network/provider/provider.ts b/src/internal/hardhat-network/provider/provider.ts
index 358f2132011e4e3d37b90346943e6b6f7e6e980c..7873fddf9b04a4da7238566debebd30b93384bc1 100644
--- a/src/internal/hardhat-network/provider/provider.ts
+++ b/src/internal/hardhat-network/provider/provider.ts
@@ -16,7 +16,7 @@ import type {
   RawTrace,
   Response,
   SubscriptionEvent,
-} from "@nomicfoundation/edr";
+} from "@ignored/edr";
 import { Common } from "@nomicfoundation/ethereumjs-common";
 import chalk from "chalk";
 import debug from "debug";
@@ -86,8 +86,8 @@ let _globalEdrContext: EdrContext | undefined;
 // Lazy initialize the global EDR context.
 export function getGlobalEdrContext(): EdrContext {
   const { EdrContext } = requireNapiRsModule(
-    "@nomicfoundation/edr"
-  ) as typeof import("@nomicfoundation/edr");
+    "@ignored/edr"
+  ) as typeof import("@ignored/edr");
 
   if (_globalEdrContext === undefined) {
     // Only one is allowed to exist
@@ -194,8 +194,8 @@ export class EdrProviderWrapper
     tracingConfig?: TracingConfig
   ): Promise<EdrProviderWrapper> {
     const { Provider } = requireNapiRsModule(
-      "@nomicfoundation/edr"
-    ) as typeof import("@nomicfoundation/edr");
+      "@ignored/edr"
+    ) as typeof import("@ignored/edr");
 
     const coinbase = config.coinbase ?? DEFAULT_COINBASE;
 
@@ -453,7 +453,7 @@ export class EdrProviderWrapper
     }
 
     // Override EDR version string with Hardhat version string with EDR backend,
-    // e.g. `HardhatNetwork/2.19.0/@nomicfoundation/edr/0.2.0-dev`
+    // e.g. `HardhatNetwork/2.19.0/@ignored/edr/0.2.0-dev`
     if (args.method === "web3_clientVersion") {
       return clientVersion(response.result);
     } else if (
@@ -604,7 +604,7 @@ export class EdrProviderWrapper
 async function clientVersion(edrClientVersion: string): Promise<string> {
   const hardhatPackage = await getPackageJson();
   const edrVersion = edrClientVersion.split("/")[1];
-  return `HardhatNetwork/${hardhatPackage.version}/@nomicfoundation/edr/${edrVersion}`;
+  return `HardhatNetwork/${hardhatPackage.version}/@ignored/edr/${edrVersion}`;
 }
 
 export async function createHardhatNetworkProvider(
diff --git a/src/internal/hardhat-network/provider/return-data.ts b/src/internal/hardhat-network/provider/return-data.ts
index 26579010852a935996d31b9540de97bf781038b7..128498bd1e4eafeefb339f53c27edc7ad18af7c7 100644
--- a/src/internal/hardhat-network/provider/return-data.ts
+++ b/src/internal/hardhat-network/provider/return-data.ts
@@ -1,7 +1,7 @@
 import { requireNapiRsModule } from "../../../common/napi-rs";
 
 const { ReturnData } = requireNapiRsModule(
-  "@nomicfoundation/edr"
-) as typeof import("@nomicfoundation/edr");
+  "@ignored/edr"
+) as typeof import("@ignored/edr");
 
 export { ReturnData };
diff --git a/src/internal/hardhat-network/provider/utils/convertToEdr.ts b/src/internal/hardhat-network/provider/utils/convertToEdr.ts
index a955ef12258fdd26580509feac5a22df03aae979..d2355bb149a7d9e6501c4035afd0b2458353f0cd 100644
--- a/src/internal/hardhat-network/provider/utils/convertToEdr.ts
+++ b/src/internal/hardhat-network/provider/utils/convertToEdr.ts
@@ -6,7 +6,7 @@ import type {
   TracingMessage,
   TracingMessageResult,
   TracingStep,
-} from "@nomicfoundation/edr";
+} from "@ignored/edr";
 import { Address } from "@nomicfoundation/ethereumjs-util";
 
 import { requireNapiRsModule } from "../../../../common/napi-rs";
@@ -23,8 +23,8 @@ import {
 
 export function ethereumsjsHardforkToEdrSpecId(hardfork: HardforkName): SpecId {
   const { SpecId } = requireNapiRsModule(
-    "@nomicfoundation/edr"
-  ) as typeof import("@nomicfoundation/edr");
+    "@ignored/edr"
+  ) as typeof import("@ignored/edr");
 
   switch (hardfork) {
     case HardforkName.FRONTIER:
@@ -71,8 +71,8 @@ export function ethereumsjsHardforkToEdrSpecId(hardfork: HardforkName): SpecId {
 
 export function edrSpecIdToEthereumHardfork(specId: SpecId): HardforkName {
   const { SpecId } = requireNapiRsModule(
-    "@nomicfoundation/edr"
-  ) as typeof import("@nomicfoundation/edr");
+    "@ignored/edr"
+  ) as typeof import("@ignored/edr");
 
   switch (specId) {
     case SpecId.Frontier:
@@ -138,8 +138,8 @@ export function ethereumjsMempoolOrderToEdrMineOrdering(
   mempoolOrder: MempoolOrder
 ): MineOrdering {
   const { MineOrdering } = requireNapiRsModule(
-    "@nomicfoundation/edr"
-  ) as typeof import("@nomicfoundation/edr");
+    "@ignored/edr"
+  ) as typeof import("@ignored/edr");
 
   switch (mempoolOrder) {
     case "fifo":
diff --git a/src/internal/hardhat-network/provider/vm/exit.ts b/src/internal/hardhat-network/provider/vm/exit.ts
index 480728bae018e014c89bf65ab5707ebe253f4f98..f40027e2d3a2cb6d7d17937d67c6081da4cf932b 100644
--- a/src/internal/hardhat-network/provider/vm/exit.ts
+++ b/src/internal/hardhat-network/provider/vm/exit.ts
@@ -1,7 +1,7 @@
 import { requireNapiRsModule } from "../../../../common/napi-rs";
 
 const { ExitCode } = requireNapiRsModule(
-  "@nomicfoundation/edr"
-) as typeof import("@nomicfoundation/edr");
+  "@ignored/edr"
+) as typeof import("@ignored/edr");
 
 export { ExitCode };
diff --git a/src/internal/hardhat-network/provider/vm/minimal-vm.ts b/src/internal/hardhat-network/provider/vm/minimal-vm.ts
index f80fa55d614caeab050fc93768dbb608fa532fd8..9287f2c60e58dee3995b010ef058e9067f7ec305 100644
--- a/src/internal/hardhat-network/provider/vm/minimal-vm.ts
+++ b/src/internal/hardhat-network/provider/vm/minimal-vm.ts
@@ -1,4 +1,4 @@
-import type { Provider as EdrProviderT } from "@nomicfoundation/edr";
+import type { Provider as EdrProviderT } from "@ignored/edr";
 import type { Address } from "@nomicfoundation/ethereumjs-util";
 import type {
   MinimalEVMResult,
diff --git a/src/internal/hardhat-network/provider/vm/types.ts b/src/internal/hardhat-network/provider/vm/types.ts
index ba4332ec5defe2890aeb21cf2f17ee2ddc011d24..244970d612bff1144eb61be284834628a4e617c1 100644
--- a/src/internal/hardhat-network/provider/vm/types.ts
+++ b/src/internal/hardhat-network/provider/vm/types.ts
@@ -1,4 +1,4 @@
-import type { ExceptionalHalt, SuccessReason } from "@nomicfoundation/edr";
+import type { ExceptionalHalt, SuccessReason } from "@ignored/edr";
 import type { Address } from "@nomicfoundation/ethereumjs-util";
 
 /**
diff --git a/src/internal/hardhat-network/stack-traces/compiler-to-model.ts b/src/internal/hardhat-network/stack-traces/compiler-to-model.ts
index 024c1f650e7fb444c2c30932ae8f4e736c1d4646..3702176ac0834639e9ebdfd7507e31c603a7d4d6 100644
--- a/src/internal/hardhat-network/stack-traces/compiler-to-model.ts
+++ b/src/internal/hardhat-network/stack-traces/compiler-to-model.ts
@@ -1,7 +1,7 @@
 import { requireNapiRsModule } from "../../../common/napi-rs";
 
 const { createModelsAndDecodeBytecodes } = requireNapiRsModule(
-  "@nomicfoundation/edr"
-) as typeof import("@nomicfoundation/edr");
+  "@ignored/edr"
+) as typeof import("@ignored/edr");
 
 export { createModelsAndDecodeBytecodes };
diff --git a/src/internal/hardhat-network/stack-traces/debug.ts b/src/internal/hardhat-network/stack-traces/debug.ts
index 19bedc7654f2de97929cee63adcf877b19167f61..4cd9c76b9e4804459cbe1801cb49593ac0294607 100644
--- a/src/internal/hardhat-network/stack-traces/debug.ts
+++ b/src/internal/hardhat-network/stack-traces/debug.ts
@@ -1,7 +1,7 @@
 import { requireNapiRsModule } from "../../../common/napi-rs";
 
 const { printMessageTrace, printStackTrace } = requireNapiRsModule(
-  "@nomicfoundation/edr"
-) as typeof import("@nomicfoundation/edr");
+  "@ignored/edr"
+) as typeof import("@ignored/edr");
 
 export { printMessageTrace, printStackTrace };
diff --git a/src/internal/hardhat-network/stack-traces/library-utils.ts b/src/internal/hardhat-network/stack-traces/library-utils.ts
index e960e7ccf3bc2d3b660afbf8d04813d86301560a..7e9c4580b1258258a01ad0a5848d0a3a22268e16 100644
--- a/src/internal/hardhat-network/stack-traces/library-utils.ts
+++ b/src/internal/hardhat-network/stack-traces/library-utils.ts
@@ -1,7 +1,7 @@
 import { requireNapiRsModule } from "../../../common/napi-rs";
 
 const { linkHexStringBytecode } = requireNapiRsModule(
-  "@nomicfoundation/edr"
-) as typeof import("@nomicfoundation/edr");
+  "@ignored/edr"
+) as typeof import("@ignored/edr");
 
 export { linkHexStringBytecode };
diff --git a/src/internal/hardhat-network/stack-traces/message-trace.ts b/src/internal/hardhat-network/stack-traces/message-trace.ts
index 61bddec7120482ee7b30a9eb93a5b453e1e967b3..0c605be7fa36282ed21b6fb14be8e8ca4a4916ce 100644
--- a/src/internal/hardhat-network/stack-traces/message-trace.ts
+++ b/src/internal/hardhat-network/stack-traces/message-trace.ts
@@ -2,7 +2,7 @@ import type {
   PrecompileMessageTrace,
   CreateMessageTrace,
   CallMessageTrace,
-} from "@nomicfoundation/edr";
+} from "@ignored/edr";
 
 export type { PrecompileMessageTrace, CreateMessageTrace, CallMessageTrace };
 
diff --git a/src/internal/hardhat-network/stack-traces/solidity-stack-trace.ts b/src/internal/hardhat-network/stack-traces/solidity-stack-trace.ts
index b07e2c5ecd277a5a3425abca7fbaaf7b4268af45..1d336e8f9cff1a5e7414ba519928c8c17d70d275 100644
--- a/src/internal/hardhat-network/stack-traces/solidity-stack-trace.ts
+++ b/src/internal/hardhat-network/stack-traces/solidity-stack-trace.ts
@@ -24,7 +24,7 @@ import type {
   ContractTooLargeErrorStackTraceEntry,
   InternalFunctionCallStackEntry,
   ContractCallRunOutOfGasError,
-} from "@nomicfoundation/edr";
+} from "@ignored/edr";
 
 import { requireNapiRsModule } from "../../../common/napi-rs";
 
@@ -39,8 +39,8 @@ const {
   PRECOMPILE_FUNCTION_NAME,
   UNRECOGNIZED_CONTRACT_NAME,
 } = requireNapiRsModule(
-  "@nomicfoundation/edr"
-) as typeof import("@nomicfoundation/edr");
+  "@ignored/edr"
+) as typeof import("@ignored/edr");
 
 export {
   SourceReference,
diff --git a/src/internal/hardhat-network/stack-traces/solidityTracer.ts b/src/internal/hardhat-network/stack-traces/solidityTracer.ts
index c8154a413c7e9d93cd0da4a7ea506ae4a9dae062..e42821654aacd504133fb521b23357f3a606d282 100644
--- a/src/internal/hardhat-network/stack-traces/solidityTracer.ts
+++ b/src/internal/hardhat-network/stack-traces/solidityTracer.ts
@@ -1,7 +1,7 @@
 import { requireNapiRsModule } from "../../../common/napi-rs";
 
 const { SolidityTracer } = requireNapiRsModule(
-  "@nomicfoundation/edr"
-) as typeof import("@nomicfoundation/edr");
+  "@ignored/edr"
+) as typeof import("@ignored/edr");
 
 export { SolidityTracer };
diff --git a/src/internal/hardhat-network/stack-traces/vm-trace-decoder.ts b/src/internal/hardhat-network/stack-traces/vm-trace-decoder.ts
index a0bf98769b1613769487f65f63f5ec492dfa2682..b4be92c094be44923fe876c9e438a8d876369c73 100644
--- a/src/internal/hardhat-network/stack-traces/vm-trace-decoder.ts
+++ b/src/internal/hardhat-network/stack-traces/vm-trace-decoder.ts
@@ -1,4 +1,4 @@
-import type { VmTraceDecoder as VmTraceDecoderT } from "@nomicfoundation/edr";
+import type { VmTraceDecoder as VmTraceDecoderT } from "@ignored/edr";
 import chalk from "chalk";
 import debug from "debug";
 import { Reporter } from "../../sentry/reporter";
@@ -8,8 +8,8 @@ import { requireNapiRsModule } from "../../../common/napi-rs";
 const log = debug("hardhat:core:hardhat-network:node");
 
 const { VmTraceDecoder, initializeVmTraceDecoder } = requireNapiRsModule(
-  "@nomicfoundation/edr"
-) as typeof import("@nomicfoundation/edr");
+  "@ignored/edr"
+) as typeof import("@ignored/edr");
 
 function initializeVmTraceDecoderWrapper(
   vmTraceDecoder: VmTraceDecoderT,
diff --git a/src/internal/hardhat-network/stack-traces/vm-tracer.ts b/src/internal/hardhat-network/stack-traces/vm-tracer.ts
index 97d8bf6a55e659872d24a5b16c1ad7caccc5a3f6..7e63f84390f44858244f5fa343155bea94886017 100644
--- a/src/internal/hardhat-network/stack-traces/vm-tracer.ts
+++ b/src/internal/hardhat-network/stack-traces/vm-tracer.ts
@@ -1,7 +1,7 @@
 import { requireNapiRsModule } from "../../../common/napi-rs";
 
 const { VmTracer } = requireNapiRsModule(
-  "@nomicfoundation/edr"
-) as typeof import("@nomicfoundation/edr");
+  "@ignored/edr"
+) as typeof import("@ignored/edr");
 
 export { VmTracer as VMTracer };
